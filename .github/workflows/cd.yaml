name: ci

on:
  push:
    branches:
      - alpha
      - beta
      - 'rc*.x'
      - '*.x' # releases branches

jobs:
  build-and-test:
    name: build-${{matrix.os}}-net${{matrix.dotnet}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        dotnet: [8.0.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      ## Make sure we have all branches so that nx affected works.
      - name: Fetch git history
        shell: bash
        run: git fetch --no-tags --prune --depth=5 origin main

      - name: Setup git user to "NineteenSevenFour Bot"
        shell: bash
        run: |
          git config user.email "-" && \
          git config user.name "NineteenSevenFour Bot" && \
          git config --global init.defaultBranch main

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }} # uses the matrix defined above
          source-url: 'https://nuget.pkg.github.com/nineteensevenfour/index.json'
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.2.0
        with:
          versionSpec: '5.x'

      - name: Install dependencies
        shell: bash
        run: dotnet restore ./nineteensevenfour.fluentbogus.sln

      - name: Run formating check
        shell: bash
        run: dotnet format

      - name: Run tests
        run: dotnet test --no-restore --configuration Debug --collect:"XPlat Code Coverage"  --results-directory:"./testresults" "--settings" "./coverlet.runsettings"
        shell: bash

      - name: Report coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests # optional
          name: 'nineteensevenfour-fluentbogus-${{matrix.os}}-net${{matrix.dotnet}}'
          directory: './testresults/'

      - name: Build
        run: dotnet build --no-restore --configuration Release
        shell: bash

      - name: Pack0
        run: dotnet pack --no-restore --configuration Release
        shell: bash

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          # Artifact name
          name: # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path:
          # The desired behavior if no files are found using the provided path.
          # Available Options:
          #   warn: Output a warning but do not fail the action
          #   error: Fail the action with an error message
          #   ignore: Do not output any warnings or errors, the action does not fail
          #   if-no-files-found: # optional, default is warn
          #   # Duration after which artifact will expire in days. 0 means using default retention. Minimum 1 day. Maximum 90 days unless changed from the repository settings page.
          #   retention-days: # optional
          #   # The level of compression for Zlib to be applied to the artifact archive. The value can range from 0 to 9: - 0: No compression - 1: Best speed - 6: Default compression (same as GNU Gzip) - 9: Best compression Higher levels will result in better compression, but will take longer to complete. For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
          #   compression-level: # optional, default is 6
          #   # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.
          #   overwrite: # optional, default is false


  build-and-release:
    name: release

    runs-on: windows-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      ## Make sure we have all branches so that nx affected works.
      - name: Fetch git history
        shell: bash
        run: git fetch --no-tags --prune --depth=5 origin main

      - name: Setup git user to "NineteenSevenFour Bot"
        shell: bash
        run: |
          git config user.email "-" && \
          git config user.name "NineteenSevenFour Bot" && \
          git config --global init.defaultBranch main

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          source-url: 'https://nuget.pkg.github.com/nineteensevenfour/index.json'
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
          name: # optional
          # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
          path: # optional
          # A glob pattern matching the artifacts that should be downloaded. Ignored if name is specified.
          pattern: # optional
          # When multiple artifacts are matched, this changes the behavior of the destination directories. If true, the downloaded artifacts will be in the same directory specified by path. If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
          merge-multiple: # optional, default is false
          # The GitHub token used to authenticate with the GitHub API. This is required when downloading artifacts from a different repository or from a different workflow run. If this is not specified, the action will attempt to download artifacts from the current repository and the current workflow run.
          github-token: # optional
          # The repository owner and the repository name joined together by "/". If github-token is specified, this is the repository that artifacts will be downloaded from.
          repository: # optional, default is ${{ github.repository }}
          # The id of the workflow run where the desired download artifact was uploaded from. If github-token is specified, this is the run that artifacts will be downloaded from.
          run-id: # optional, default is ${{ github.run_id }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: '${{ github.workspace }}/**/*.nupkg'
          github-token: ${{ secrets.GITHUB_TOKEN }}


