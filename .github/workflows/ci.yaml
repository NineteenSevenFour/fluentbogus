name: ci

on:
  pull_request:
    branches:
      - '**'
    types:
      - opened
      - reopened
      - synchronize

jobs:
  build-and-test:
    name: build-${{matrix.os}}-net${{matrix.dotnet}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        dotnet: [9.0.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      ## Make sure we have all branches so that nx affected works.
      - name: Fetch git history
        shell: bash
        run: git fetch --no-tags --prune --depth=5 origin main

      - name: Setup git user to "NineteenSevenFour Bot"
        shell: bash
        run: |
          git config user.email "-" && \
          git config user.name "NineteenSevenFour Bot" && \
          git config --global init.defaultBranch main

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }} # uses the matrix defined above
          source-url: 'https://nuget.pkg.github.com/nineteensevenfour/index.json'
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.2.0
        with:
          versionSpec: '5.x'

      - name: Install dependencies
        shell: bash
        run: dotnet restore ./nineteensevenfour.fluentbogus.sln

      - name: Run formating check
        shell: bash
        run: dotnet format

      - name: Run tests
        run: dotnet test --no-restore --configuration Debug --collect:"XPlat Code Coverage"  --results-directory:"./testresults" "--settings" "./coverlet.runsettings"
        shell: bash

      - name: Report coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests # optional
          name: 'nineteensevenfour-fluentbogus-${{matrix.os}}-net${{matrix.dotnet}}'
          directory: './testresults/'

      - name: Build
        run: dotnet build --no-restore --configuration Release
        shell: bash
